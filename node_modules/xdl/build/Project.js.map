{"version":3,"file":"Project.js","sourceRoot":"","sources":["../src/Project.ts"],"names":[],"mappings":";;;AAAA,yCAUoB;AA+BlB,qGAtCA,+BAAoB,OAsCA;AAEpB,4GAtCA,sCAA2B,OAsCA;AAJ3B,kGAjCA,4BAAiB,OAiCA;AAKjB,2GArCA,qCAA0B,OAqCA;AAJ1B,iGAhCA,2BAAgB,OAgCA;AA5BlB;;;;GAIG;AACI,KAAK,UAAU,eAAe,CACnC,WAAmB,EACnB,OAEC;IAED,iCAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,2CAA2C;IAChF,IAAI,OAAO,CAAC,YAAY,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;QAC3E,MAAM,IAAI,mBAAQ,CAAC,iBAAiB,EAAE,iCAAiC,CAAC,CAAC;KAC1E;IACD,MAAM,0BAAe,CAAC,oBAAoB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AACnE,CAAC;AAXD,0CAWC;AAED;;;GAGG;AACI,KAAK,UAAU,aAAa,CAAC,WAAmB;IACrD,OAAO,0BAAe,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;AAC5D,CAAC;AAFD,sCAEC;AAUD,uCAYoB;AAXlB,4GAAA,gBAAgB,OAAA;AAChB,8GAAA,kBAAkB,OAAA;AAClB,oHAAA,wBAAwB,OAAA;AACxB,wGAAA,YAAY,OAAA;AACZ,wGAAA,YAAY,OAAA;AAGZ,mGAAA,OAAO,OAAA;AACP,sGAAA,UAAU,OAAA;AACV,qGAAA,SAAS,OAAA;AACT,oHAAA,wBAAwB,OAAA","sourcesContent":["import {\n  assertValidProjectRoot,\n  ProjectSettings,\n  startExpoServerAsync,\n  StartOptions,\n  startReactNativeServerAsync,\n  startTunnelsAsync,\n  stopReactNativeServerAsync,\n  stopTunnelsAsync,\n  XDLError,\n} from './internal';\n\n/**\n * @deprecated Use `ProjectSettings.setPackagerInfoAsync`\n * @param projectRoot\n * @param options\n */\nexport async function setOptionsAsync(\n  projectRoot: string,\n  options: {\n    packagerPort?: number;\n  }\n): Promise<void> {\n  assertValidProjectRoot(projectRoot); // Check to make sure all options are valid\n  if (options.packagerPort != null && !Number.isInteger(options.packagerPort)) {\n    throw new XDLError('INVALID_OPTIONS', 'packagerPort must be an integer');\n  }\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, options);\n}\n\n/**\n * @deprecated `ProjectSettings.getCurrentStatusAsync`\n * @param projectRoot\n */\nexport async function currentStatus(projectRoot: string) {\n  return ProjectSettings.getCurrentStatusAsync(projectRoot);\n}\n\nexport {\n  startTunnelsAsync,\n  stopTunnelsAsync,\n  startExpoServerAsync,\n  StartOptions,\n  startReactNativeServerAsync,\n  stopReactNativeServerAsync,\n};\nexport {\n  broadcastMessage,\n  createBundlesAsync,\n  getPublishExpConfigAsync,\n  prepareHooks,\n  publishAsync,\n  PublishedProjectResult,\n  PublishOptions,\n  runHook,\n  startAsync,\n  stopAsync,\n  writeArtifactSafelyAsync,\n} from './internal';\n"]}