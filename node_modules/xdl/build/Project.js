"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeArtifactSafelyAsync = exports.stopAsync = exports.startAsync = exports.runHook = exports.publishAsync = exports.prepareHooks = exports.getPublishExpConfigAsync = exports.createBundlesAsync = exports.broadcastMessage = exports.stopReactNativeServerAsync = exports.startReactNativeServerAsync = exports.startExpoServerAsync = exports.stopTunnelsAsync = exports.startTunnelsAsync = exports.currentStatus = exports.setOptionsAsync = void 0;
const internal_1 = require("./internal");
Object.defineProperty(exports, "startExpoServerAsync", { enumerable: true, get: function () { return internal_1.startExpoServerAsync; } });
Object.defineProperty(exports, "startReactNativeServerAsync", { enumerable: true, get: function () { return internal_1.startReactNativeServerAsync; } });
Object.defineProperty(exports, "startTunnelsAsync", { enumerable: true, get: function () { return internal_1.startTunnelsAsync; } });
Object.defineProperty(exports, "stopReactNativeServerAsync", { enumerable: true, get: function () { return internal_1.stopReactNativeServerAsync; } });
Object.defineProperty(exports, "stopTunnelsAsync", { enumerable: true, get: function () { return internal_1.stopTunnelsAsync; } });
/**
 * @deprecated Use `ProjectSettings.setPackagerInfoAsync`
 * @param projectRoot
 * @param options
 */
async function setOptionsAsync(projectRoot, options) {
    internal_1.assertValidProjectRoot(projectRoot); // Check to make sure all options are valid
    if (options.packagerPort != null && !Number.isInteger(options.packagerPort)) {
        throw new internal_1.XDLError('INVALID_OPTIONS', 'packagerPort must be an integer');
    }
    await internal_1.ProjectSettings.setPackagerInfoAsync(projectRoot, options);
}
exports.setOptionsAsync = setOptionsAsync;
/**
 * @deprecated `ProjectSettings.getCurrentStatusAsync`
 * @param projectRoot
 */
async function currentStatus(projectRoot) {
    return internal_1.ProjectSettings.getCurrentStatusAsync(projectRoot);
}
exports.currentStatus = currentStatus;
var internal_2 = require("./internal");
Object.defineProperty(exports, "broadcastMessage", { enumerable: true, get: function () { return internal_2.broadcastMessage; } });
Object.defineProperty(exports, "createBundlesAsync", { enumerable: true, get: function () { return internal_2.createBundlesAsync; } });
Object.defineProperty(exports, "getPublishExpConfigAsync", { enumerable: true, get: function () { return internal_2.getPublishExpConfigAsync; } });
Object.defineProperty(exports, "prepareHooks", { enumerable: true, get: function () { return internal_2.prepareHooks; } });
Object.defineProperty(exports, "publishAsync", { enumerable: true, get: function () { return internal_2.publishAsync; } });
Object.defineProperty(exports, "runHook", { enumerable: true, get: function () { return internal_2.runHook; } });
Object.defineProperty(exports, "startAsync", { enumerable: true, get: function () { return internal_2.startAsync; } });
Object.defineProperty(exports, "stopAsync", { enumerable: true, get: function () { return internal_2.stopAsync; } });
Object.defineProperty(exports, "writeArtifactSafelyAsync", { enumerable: true, get: function () { return internal_2.writeArtifactSafelyAsync; } });
//# sourceMappingURL=Project.js.map